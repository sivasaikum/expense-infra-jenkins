pipeline {
    agent { label 'STAGE-1'}
    environment {
        PROJECT = 'expense'
        COMPONENT = 'backend'
        appVersion = ''
    }
    options {
        disableConcurrentBuilds()
        timeout(time: 30, unit: 'MINUTES')
        ansiColor('xterm')
    }
    parameters {
        choice(name:'ACTION',choices:['apply','destroy'],description: 'pick something')
    }
    stages {
        stage ('INIT') {
            steps {
                script {
                    withAWS ( region: 'us-east-1', credentials: 'aws-cred') {
                        sh """
                        cd 00-vpc/
                        terraform init -reconfigure
                        terraform plan
                        """
                    }

                }
            }
        }

        stage ('Apply') {
            input {
                message "Should we continue?"
                ok "Yes, we should."
            }
            steps {
                script {
                    withAWS(region: 'us-east-1', credentials: 'aws-cred') {
                        sh """
                            cd 00-vpc
                            terraform apply -auto-approve
                        """
                    }
                    
                }
            }
        }
        stage('Trigger-SG') {
            when {
                expression {
                    params.ACTION == 'apply'
                }
            }
            steps {
                build job: '10-sg', parameters: [string(name:'ACTION', value:'apply')], propagate: true

            }
        }
    }
    post {
        always {
            echo " This is a joindevops Expense project build"
            deleteDir()
        }
        failure {
            echo " This pipeline is failed for some reason"
        }
        success {
            echo "This pipeline is success"
        }
    }
}