pipeline {
    agent { label 'STAGE-1'}
    environment {
        PROJECT = 'expense'
        COMPONENT = 'backend'
        appVersion = ''
    }
    options {
        disableConcurrentBuilds()
        timeout(time: 30, unit: 'MINUTES')
        ansiColor('xterm')
    }
    stages {
        stage ('INIT') {
            steps {
                script {
                    withAWS ( region: 'us-east-1', credentials: 'aws-cred') {
                        sh """
                        cd 00-vpc/
                        terraform init -reconfigure
                        terraform plan
                        """
                    }

                }
            }
        }

        stage ('Apply') {
            input {
                message "Should we continue?"
                ok "Yes, we should."
            }
            steps {
                script {
                    withAWS(region: 'us-east-1', credentials: 'aws-cred') {
                        sh """
                            cd 00-vpc
                            terraform apply -auto-approve
                        """
                    }
                    
                }
            }
        }
    }
    post {
        always {
           echo " This is a hello-pipeline build "
           deleteDir()

        }
        failure {
            echo " This is a hello-pipeline build is failed for some reason"
        }
        success {
            echo " This is a hello-pipeline build is Successed . Thanks ! "
        }
    }
}